# Setting identity
git config --global user.name "John Smith"
git config --global user.email johnsmith@example.com

# show remotes
git remote -v

# change remote url
git remote set-url origin https://github.com/USERNAME/REPOSITORY.git # or
git remote set-url origin git@github.com:USERNAME/REPOSITORY.git

# compare branches 
git diff branch1 branch2 # local local
git diff master origin/master # local remote

# get a list of modified files between the current and a given branche
git diff --name-only <targetbranch>

# Viw the contents of a commit
git show git diff c8cf932
git show c8cf932:path/to/sile # for a specific file

# ignoring changes on versioned files
git update-index --assume-unchanged path/to/file
git update-index --no-assume-unchanged path/to/file.txt # to roll back

# create and checkout a new branch
git checkout -b my_branch

# push the new branch to remote
git push -u origin my_branch

# merging a branch to master
git checkout master
git merge my_branch

# delete a local branch
git branch -d branchname

# delete a remote branch
git push origin :branchname

# Remove untracked files
git clean -f -d

# To remove untracked and ignored files
git clean -f -d -x

# adding submodules
git submodule add git@github.com/USERNAME/MODREPO.git modrepo

# initialize submodule and fetch data
git submodule update --init

# update all submodules
git submodule foreach git pull origin master

# update specific submodule
cd path/to/submodule/directory
git pull origin master

# Configuring a remote fork (upstream)
git remote add upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY

# Syncing a fork (fetching upstream)
git fetch upstream
git checkout master
git merge upstream/master

# retrieve version of a file from a given commit
git checkout <commit> path/to/file
